plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
    id 'io.gitlab.arturbosch.detekt'
    id 'org.jlleitschuh.gradle.ktlint'
}

android {
    namespace 'com.hayuwidyas'
    compileSdk 34

    defaultConfig {
        applicationId "com.hayuwidyas"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        // WooCommerce API Configuration
        buildConfigField "String", "WOOCOMMERCE_BASE_URL", "\"https://hayuwidyas.com/wp-json/wc/v3/\""
        buildConfigField "String", "WOOCOMMERCE_CONSUMER_KEY", "\"ck_your_consumer_key_here\""
        buildConfigField "String", "WOOCOMMERCE_CONSUMER_SECRET", "\"cs_your_consumer_secret_here\""
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
        buildConfig true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    lint {
        abortOnError false
        checkReleaseBuilds false
        disable 'InvalidPackage'
    }
}

// Detekt configuration
detekt {
    toolVersion = detekt_version
    config = files("$project.rootDir/detekt.yml")
    buildUponDefaultConfig = true
    
    reports {
        html.enabled = true
        xml.enabled = true
        txt.enabled = true
        sarif.enabled = true
    }
}

// KtLint configuration
ktlint {
    version = ktlint_version
    debug = true
    verbose = true
    android = true
    outputToConsole = true
    outputColorName = "RED"
    ignoreFailures = false
    enableExperimentalRules = true
    
    filter {
        exclude("**/generated/**")
        include("**/kotlin/**")
    }
}

dependencies {
    // Core Android
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"

    // Jetpack Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.1.2'
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.animation:animation:$compose_version"
    implementation "androidx.compose.animation:animation-graphics:$compose_version"
    
    // Navigation Compose
    implementation "androidx.navigation:navigation-compose:$navigation_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0'

    // Hilt Dependency Injection
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    // Image Loading
    implementation "io.coil-kt:coil-compose:$coil_version"

    // Room Database
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Firebase
    implementation platform("com.google.firebase:firebase-bom:$firebase_bom_version")
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-perf-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.android.gms:play-services-auth:20.7.0'

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version"

    // Security
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'

    // Splash Screen
    implementation 'androidx.core:core-splashscreen:1.0.1'

    // System UI Controller
    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.32.0'
    implementation 'com.google.accompanist:accompanist-permissions:0.32.0'

    // Paging
    implementation 'androidx.paging:paging-runtime-ktx:3.2.1'
    implementation 'androidx.paging:paging-compose:3.2.1'

    // Preferences DataStore
    implementation 'androidx.datastore:datastore-preferences:1.0.0'

    // Lottie Animations
    implementation 'com.airbnb.android:lottie-compose:6.2.0'

    // Timber Logging (Debug builds only)
    debugImplementation 'com.jakewharton.timber:timber:5.0.1'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.8.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:5.2.1'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"

    // Android Testing
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$navigation_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"

    // Debug Tools
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}
